//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.CompilerServices;
using System.Diagnostics;
using Unity.IL2CPP.CompilerServices;

#pragma warning disable 0660, 0661

namespace CGTK.Utilities.BetterMath
{
    /// <summary>A 4 component vector of floats.</summary>
    [DebuggerTypeProxy(typeof(F32x4.DebuggerProxy))]
    [System.Serializable]
    [Il2CppEagerStaticClassConstruction]
    public partial struct F32x4 : System.IEquatable<F32x4>, IFormattable
    {
        /// <summary>x component of the vector.</summary>
        public float x;
        /// <summary>y component of the vector.</summary>
        public float y;
        /// <summary>z component of the vector.</summary>
        public float z;
        /// <summary>w component of the vector.</summary>
        public float w;

        /// <summary>F32x4 zero value.</summary>
        public static readonly F32x4 zero;

        /// <summary>Constructs a F32x4 vector from four float values.</summary>
        /// <param name="x">The constructed vector's x component will be set to this value.</param>
        /// <param name="y">The constructed vector's y component will be set to this value.</param>
        /// <param name="z">The constructed vector's z component will be set to this value.</param>
        /// <param name="w">The constructed vector's w component will be set to this value.</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(float x = 0, float y = 0, float z = 0, float w = 0)
        {
            this.x = x;
            this.y = y;
            this.z = z;
            this.w = w;
        }

        /// <summary>Constructs a F32x4 vector from two float values and a F32x2 vector.</summary>
        /// <param name="x">The constructed vector's x component will be set to this value.</param>
        /// <param name="y">The constructed vector's y component will be set to this value.</param>
        /// <param name="zw">The constructed vector's zw components will be set to this value.</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(float x, float y, F32x2 zw)
        {
            this.x = x;
            this.y = y;
            this.z = zw.x;
            this.w = zw.y;
        }

        /// <summary>Constructs a F32x4 vector from a float value, a F32x2 vector and a float value.</summary>
        /// <param name="x">The constructed vector's x component will be set to this value.</param>
        /// <param name="yz">The constructed vector's yz components will be set to this value.</param>
        /// <param name="w">The constructed vector's w component will be set to this value.</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(float x, F32x2 yz, float w)
        {
            this.x = x;
            this.y = yz.x;
            this.z = yz.y;
            this.w = w;
        }

        /// <summary>Constructs a F32x4 vector from a float value and a F32x3 vector.</summary>
        /// <param name="x">The constructed vector's x component will be set to this value.</param>
        /// <param name="yzw">The constructed vector's yzw components will be set to this value.</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(float x, F32x3 yzw)
        {
            this.x = x;
            this.y = yzw.x;
            this.z = yzw.y;
            this.w = yzw.z;
        }

        /// <summary>Constructs a F32x4 vector from a F32x2 vector and two float values.</summary>
        /// <param name="xy">The constructed vector's xy components will be set to this value.</param>
        /// <param name="z">The constructed vector's z component will be set to this value.</param>
        /// <param name="w">The constructed vector's w component will be set to this value.</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(F32x2 xy, float z, float w)
        {
            this.x = xy.x;
            this.y = xy.y;
            this.z = z;
            this.w = w;
        }

        /// <summary>Constructs a F32x4 vector from two F32x2 vectors.</summary>
        /// <param name="xy">The constructed vector's xy components will be set to this value.</param>
        /// <param name="zw">The constructed vector's zw components will be set to this value.</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(F32x2 xy, F32x2 zw)
        {
            this.x = xy.x;
            this.y = xy.y;
            this.z = zw.x;
            this.w = zw.y;
        }

        /// <summary>Constructs a F32x4 vector from a F32x3 vector and a float value.</summary>
        /// <param name="xyz">The constructed vector's xyz components will be set to this value.</param>
        /// <param name="w">The constructed vector's w component will be set to this value.</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(F32x3 xyz, float w)
        {
            this.x = xyz.x;
            this.y = xyz.y;
            this.z = xyz.z;
            this.w = w;
        }

        /// <summary>Constructs a F32x4 vector from a F32x4 vector.</summary>
        /// <param name="xyzw">The constructed vector's xyzw components will be set to this value.</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(F32x4 xyzw)
        {
            this.x = xyzw.x;
            this.y = xyzw.y;
            this.z = xyzw.z;
            this.w = xyzw.w;
        }

        /// <summary>Constructs a F32x4 vector from a single float value by assigning it to every component.</summary>
        /// <param name="v">float to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(float v)
        {
            this.x = v;
            this.y = v;
            this.z = v;
            this.w = v;
        }

        /// <summary>Constructs a F32x4 vector from a single bool value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">bool to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(bool v)
        {
            this.x = v ? 1.0f : 0.0f;
            this.y = v ? 1.0f : 0.0f;
            this.z = v ? 1.0f : 0.0f;
            this.w = v ? 1.0f : 0.0f;
        }

        /// <summary>Constructs a F32x4 vector from a Boolx4 vector by componentwise conversion.</summary>
        /// <param name="v">Boolx4 to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(Boolx4 v)
        {
            this.x = v.x ? 1.0f : 0.0f;
            this.y = v.y ? 1.0f : 0.0f;
            this.z = v.z ? 1.0f : 0.0f;
            this.w = v.w ? 1.0f : 0.0f;
        }

        /// <summary>Constructs a F32x4 vector from a single int value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">int to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(int v)
        {
            this.x = v;
            this.y = v;
            this.z = v;
            this.w = v;
        }

        /// <summary>Constructs a F32x4 vector from a I32x4 vector by componentwise conversion.</summary>
        /// <param name="v">I32x4 to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(I32x4 v)
        {
            this.x = v.x;
            this.y = v.y;
            this.z = v.z;
            this.w = v.w;
        }

        /// <summary>Constructs a F32x4 vector from a single uint value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">uint to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(uint v)
        {
            this.x = v;
            this.y = v;
            this.z = v;
            this.w = v;
        }

        /// <summary>Constructs a F32x4 vector from a U32x4 vector by componentwise conversion.</summary>
        /// <param name="v">U32x4 to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(U32x4 v)
        {
            this.x = v.x;
            this.y = v.y;
            this.z = v.z;
            this.w = v.w;
        }

        /// <summary>Constructs a F32x4 vector from a single F16 value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">F16 to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(F16 v)
        {
            this.x = v;
            this.y = v;
            this.z = v;
            this.w = v;
        }

        /// <summary>Constructs a F32x4 vector from a F16x4 vector by componentwise conversion.</summary>
        /// <param name="v">F16x4 to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(F16x4 v)
        {
            this.x = v.x;
            this.y = v.y;
            this.z = v.z;
            this.w = v.w;
        }

        /// <summary>Constructs a F32x4 vector from a single double value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">double to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(double v)
        {
            this.x = (float)v;
            this.y = (float)v;
            this.z = (float)v;
            this.w = (float)v;
        }

        /// <summary>Constructs a F32x4 vector from a F64x4 vector by componentwise conversion.</summary>
        /// <param name="v">F64x4 to convert to F32x4</param>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public F32x4(F64x4 v)
        {
            this.x = (float)v.x;
            this.y = (float)v.y;
            this.z = (float)v.z;
            this.w = (float)v.w;
        }


        /// <summary>Implicitly converts a single float value to a F32x4 vector by assigning it to every component.</summary>
        /// <param name="v">float to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static implicit operator F32x4(float v) { return new F32x4(v); }

        /// <summary>Explicitly converts a single bool value to a F32x4 vector by converting it to float and assigning it to every component.</summary>
        /// <param name="v">bool to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static explicit operator F32x4(bool v) { return new F32x4(v); }

        /// <summary>Explicitly converts a Boolx4 vector to a F32x4 vector by componentwise conversion.</summary>
        /// <param name="v">Boolx4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static explicit operator F32x4(Boolx4 v) { return new F32x4(v); }

        /// <summary>Implicitly converts a single int value to a F32x4 vector by converting it to float and assigning it to every component.</summary>
        /// <param name="v">int to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static implicit operator F32x4(int v) { return new F32x4(v); }

        /// <summary>Implicitly converts a I32x4 vector to a F32x4 vector by componentwise conversion.</summary>
        /// <param name="v">I32x4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static implicit operator F32x4(I32x4 v) { return new F32x4(v); }

        /// <summary>Implicitly converts a single uint value to a F32x4 vector by converting it to float and assigning it to every component.</summary>
        /// <param name="v">uint to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static implicit operator F32x4(uint v) { return new F32x4(v); }

        /// <summary>Implicitly converts a U32x4 vector to a F32x4 vector by componentwise conversion.</summary>
        /// <param name="v">U32x4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static implicit operator F32x4(U32x4 v) { return new F32x4(v); }

        /// <summary>Implicitly converts a single F16 value to a F32x4 vector by converting it to float and assigning it to every component.</summary>
        /// <param name="v">F16 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static implicit operator F32x4(F16 v) { return new F32x4(v); }

        /// <summary>Implicitly converts a F16x4 vector to a F32x4 vector by componentwise conversion.</summary>
        /// <param name="v">F16x4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static implicit operator F32x4(F16x4 v) { return new F32x4(v); }

        /// <summary>Explicitly converts a single double value to a F32x4 vector by converting it to float and assigning it to every component.</summary>
        /// <param name="v">double to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static explicit operator F32x4(double v) { return new F32x4(v); }

        /// <summary>Explicitly converts a F64x4 vector to a F32x4 vector by componentwise conversion.</summary>
        /// <param name="v">F64x4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static explicit operator F32x4(F64x4 v) { return new F32x4(v); }


        /// <summary>Returns the result of a componentwise multiplication operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise multiplication.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise multiplication.</param>
        /// <returns>F32x4 result of the componentwise multiplication.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator * (F32x4 lhs, F32x4 rhs) { return new F32x4 (lhs.x * rhs.x, lhs.y * rhs.y, lhs.z * rhs.z, lhs.w * rhs.w); }

        /// <summary>Returns the result of a componentwise multiplication operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise multiplication.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise multiplication.</param>
        /// <returns>F32x4 result of the componentwise multiplication.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator * (F32x4 lhs, float rhs) { return new F32x4 (lhs.x * rhs, lhs.y * rhs, lhs.z * rhs, lhs.w * rhs); }

        /// <summary>Returns the result of a componentwise multiplication operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise multiplication.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise multiplication.</param>
        /// <returns>F32x4 result of the componentwise multiplication.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator * (float lhs, F32x4 rhs) { return new F32x4 (lhs * rhs.x, lhs * rhs.y, lhs * rhs.z, lhs * rhs.w); }


        /// <summary>Returns the result of a componentwise addition operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise addition.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise addition.</param>
        /// <returns>F32x4 result of the componentwise addition.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator + (F32x4 lhs, F32x4 rhs) { return new F32x4 (lhs.x + rhs.x, lhs.y + rhs.y, lhs.z + rhs.z, lhs.w + rhs.w); }

        /// <summary>Returns the result of a componentwise addition operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise addition.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise addition.</param>
        /// <returns>F32x4 result of the componentwise addition.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator + (F32x4 lhs, float rhs) { return new F32x4 (lhs.x + rhs, lhs.y + rhs, lhs.z + rhs, lhs.w + rhs); }

        /// <summary>Returns the result of a componentwise addition operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise addition.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise addition.</param>
        /// <returns>F32x4 result of the componentwise addition.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator + (float lhs, F32x4 rhs) { return new F32x4 (lhs + rhs.x, lhs + rhs.y, lhs + rhs.z, lhs + rhs.w); }


        /// <summary>Returns the result of a componentwise subtraction operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise subtraction.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise subtraction.</param>
        /// <returns>F32x4 result of the componentwise subtraction.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator - (F32x4 lhs, F32x4 rhs) { return new F32x4 (lhs.x - rhs.x, lhs.y - rhs.y, lhs.z - rhs.z, lhs.w - rhs.w); }

        /// <summary>Returns the result of a componentwise subtraction operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise subtraction.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise subtraction.</param>
        /// <returns>F32x4 result of the componentwise subtraction.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator - (F32x4 lhs, float rhs) { return new F32x4 (lhs.x - rhs, lhs.y - rhs, lhs.z - rhs, lhs.w - rhs); }

        /// <summary>Returns the result of a componentwise subtraction operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise subtraction.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise subtraction.</param>
        /// <returns>F32x4 result of the componentwise subtraction.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator - (float lhs, F32x4 rhs) { return new F32x4 (lhs - rhs.x, lhs - rhs.y, lhs - rhs.z, lhs - rhs.w); }


        /// <summary>Returns the result of a componentwise division operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise division.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise division.</param>
        /// <returns>F32x4 result of the componentwise division.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator / (F32x4 lhs, F32x4 rhs) { return new F32x4 (lhs.x / rhs.x, lhs.y / rhs.y, lhs.z / rhs.z, lhs.w / rhs.w); }

        /// <summary>Returns the result of a componentwise division operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise division.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise division.</param>
        /// <returns>F32x4 result of the componentwise division.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator / (F32x4 lhs, float rhs) { return new F32x4 (lhs.x / rhs, lhs.y / rhs, lhs.z / rhs, lhs.w / rhs); }

        /// <summary>Returns the result of a componentwise division operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise division.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise division.</param>
        /// <returns>F32x4 result of the componentwise division.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator / (float lhs, F32x4 rhs) { return new F32x4 (lhs / rhs.x, lhs / rhs.y, lhs / rhs.z, lhs / rhs.w); }


        /// <summary>Returns the result of a componentwise modulus operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise modulus.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise modulus.</param>
        /// <returns>F32x4 result of the componentwise modulus.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator % (F32x4 lhs, F32x4 rhs) { return new F32x4 (lhs.x % rhs.x, lhs.y % rhs.y, lhs.z % rhs.z, lhs.w % rhs.w); }

        /// <summary>Returns the result of a componentwise modulus operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise modulus.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise modulus.</param>
        /// <returns>F32x4 result of the componentwise modulus.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator % (F32x4 lhs, float rhs) { return new F32x4 (lhs.x % rhs, lhs.y % rhs, lhs.z % rhs, lhs.w % rhs); }

        /// <summary>Returns the result of a componentwise modulus operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise modulus.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise modulus.</param>
        /// <returns>F32x4 result of the componentwise modulus.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator % (float lhs, F32x4 rhs) { return new F32x4 (lhs % rhs.x, lhs % rhs.y, lhs % rhs.z, lhs % rhs.w); }


        /// <summary>Returns the result of a componentwise increment operation on a F32x4 vector.</summary>
        /// <param name="val">Value to use when computing the componentwise increment.</param>
        /// <returns>F32x4 result of the componentwise increment.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator ++ (F32x4 val) { return new F32x4 (++val.x, ++val.y, ++val.z, ++val.w); }


        /// <summary>Returns the result of a componentwise decrement operation on a F32x4 vector.</summary>
        /// <param name="val">Value to use when computing the componentwise decrement.</param>
        /// <returns>F32x4 result of the componentwise decrement.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator -- (F32x4 val) { return new F32x4 (--val.x, --val.y, --val.z, --val.w); }


        /// <summary>Returns the result of a componentwise less than operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise less than.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise less than.</param>
        /// <returns>Boolx4 result of the componentwise less than.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator < (F32x4 lhs, F32x4 rhs) { return new Boolx4 (lhs.x < rhs.x, lhs.y < rhs.y, lhs.z < rhs.z, lhs.w < rhs.w); }

        /// <summary>Returns the result of a componentwise less than operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise less than.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise less than.</param>
        /// <returns>Boolx4 result of the componentwise less than.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator < (F32x4 lhs, float rhs) { return new Boolx4 (lhs.x < rhs, lhs.y < rhs, lhs.z < rhs, lhs.w < rhs); }

        /// <summary>Returns the result of a componentwise less than operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise less than.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise less than.</param>
        /// <returns>Boolx4 result of the componentwise less than.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator < (float lhs, F32x4 rhs) { return new Boolx4 (lhs < rhs.x, lhs < rhs.y, lhs < rhs.z, lhs < rhs.w); }


        /// <summary>Returns the result of a componentwise less or equal operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise less or equal.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise less or equal.</param>
        /// <returns>Boolx4 result of the componentwise less or equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator <= (F32x4 lhs, F32x4 rhs) { return new Boolx4 (lhs.x <= rhs.x, lhs.y <= rhs.y, lhs.z <= rhs.z, lhs.w <= rhs.w); }

        /// <summary>Returns the result of a componentwise less or equal operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise less or equal.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise less or equal.</param>
        /// <returns>Boolx4 result of the componentwise less or equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator <= (F32x4 lhs, float rhs) { return new Boolx4 (lhs.x <= rhs, lhs.y <= rhs, lhs.z <= rhs, lhs.w <= rhs); }

        /// <summary>Returns the result of a componentwise less or equal operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise less or equal.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise less or equal.</param>
        /// <returns>Boolx4 result of the componentwise less or equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator <= (float lhs, F32x4 rhs) { return new Boolx4 (lhs <= rhs.x, lhs <= rhs.y, lhs <= rhs.z, lhs <= rhs.w); }


        /// <summary>Returns the result of a componentwise greater than operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise greater than.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise greater than.</param>
        /// <returns>Boolx4 result of the componentwise greater than.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator > (F32x4 lhs, F32x4 rhs) { return new Boolx4 (lhs.x > rhs.x, lhs.y > rhs.y, lhs.z > rhs.z, lhs.w > rhs.w); }

        /// <summary>Returns the result of a componentwise greater than operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise greater than.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise greater than.</param>
        /// <returns>Boolx4 result of the componentwise greater than.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator > (F32x4 lhs, float rhs) { return new Boolx4 (lhs.x > rhs, lhs.y > rhs, lhs.z > rhs, lhs.w > rhs); }

        /// <summary>Returns the result of a componentwise greater than operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise greater than.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise greater than.</param>
        /// <returns>Boolx4 result of the componentwise greater than.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator > (float lhs, F32x4 rhs) { return new Boolx4 (lhs > rhs.x, lhs > rhs.y, lhs > rhs.z, lhs > rhs.w); }


        /// <summary>Returns the result of a componentwise greater or equal operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise greater or equal.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise greater or equal.</param>
        /// <returns>Boolx4 result of the componentwise greater or equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator >= (F32x4 lhs, F32x4 rhs) { return new Boolx4 (lhs.x >= rhs.x, lhs.y >= rhs.y, lhs.z >= rhs.z, lhs.w >= rhs.w); }

        /// <summary>Returns the result of a componentwise greater or equal operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise greater or equal.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise greater or equal.</param>
        /// <returns>Boolx4 result of the componentwise greater or equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator >= (F32x4 lhs, float rhs) { return new Boolx4 (lhs.x >= rhs, lhs.y >= rhs, lhs.z >= rhs, lhs.w >= rhs); }

        /// <summary>Returns the result of a componentwise greater or equal operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise greater or equal.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise greater or equal.</param>
        /// <returns>Boolx4 result of the componentwise greater or equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator >= (float lhs, F32x4 rhs) { return new Boolx4 (lhs >= rhs.x, lhs >= rhs.y, lhs >= rhs.z, lhs >= rhs.w); }


        /// <summary>Returns the result of a componentwise unary minus operation on a F32x4 vector.</summary>
        /// <param name="val">Value to use when computing the componentwise unary minus.</param>
        /// <returns>F32x4 result of the componentwise unary minus.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator - (F32x4 val) { return new F32x4 (-val.x, -val.y, -val.z, -val.w); }


        /// <summary>Returns the result of a componentwise unary plus operation on a F32x4 vector.</summary>
        /// <param name="val">Value to use when computing the componentwise unary plus.</param>
        /// <returns>F32x4 result of the componentwise unary plus.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 operator + (F32x4 val) { return new F32x4 (+val.x, +val.y, +val.z, +val.w); }


        /// <summary>Returns the result of a componentwise equality operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise equality.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise equality.</param>
        /// <returns>Boolx4 result of the componentwise equality.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator == (F32x4 lhs, F32x4 rhs) { return new Boolx4 (lhs.x == rhs.x, lhs.y == rhs.y, lhs.z == rhs.z, lhs.w == rhs.w); }

        /// <summary>Returns the result of a componentwise equality operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise equality.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise equality.</param>
        /// <returns>Boolx4 result of the componentwise equality.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator == (F32x4 lhs, float rhs) { return new Boolx4 (lhs.x == rhs, lhs.y == rhs, lhs.z == rhs, lhs.w == rhs); }

        /// <summary>Returns the result of a componentwise equality operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise equality.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise equality.</param>
        /// <returns>Boolx4 result of the componentwise equality.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator == (float lhs, F32x4 rhs) { return new Boolx4 (lhs == rhs.x, lhs == rhs.y, lhs == rhs.z, lhs == rhs.w); }


        /// <summary>Returns the result of a componentwise not equal operation on two F32x4 vectors.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise not equal.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise not equal.</param>
        /// <returns>Boolx4 result of the componentwise not equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator != (F32x4 lhs, F32x4 rhs) { return new Boolx4 (lhs.x != rhs.x, lhs.y != rhs.y, lhs.z != rhs.z, lhs.w != rhs.w); }

        /// <summary>Returns the result of a componentwise not equal operation on a F32x4 vector and a float value.</summary>
        /// <param name="lhs">Left hand side F32x4 to use to compute componentwise not equal.</param>
        /// <param name="rhs">Right hand side float to use to compute componentwise not equal.</param>
        /// <returns>Boolx4 result of the componentwise not equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator != (F32x4 lhs, float rhs) { return new Boolx4 (lhs.x != rhs, lhs.y != rhs, lhs.z != rhs, lhs.w != rhs); }

        /// <summary>Returns the result of a componentwise not equal operation on a float value and a F32x4 vector.</summary>
        /// <param name="lhs">Left hand side float to use to compute componentwise not equal.</param>
        /// <param name="rhs">Right hand side F32x4 to use to compute componentwise not equal.</param>
        /// <returns>Boolx4 result of the componentwise not equal.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Boolx4 operator != (float lhs, F32x4 rhs) { return new Boolx4 (lhs != rhs.x, lhs != rhs.y, lhs != rhs.z, lhs != rhs.w); }




        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xxww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, x, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, z, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; y = value.y; z = value.z; w = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xywx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xywy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xywz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, w, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; y = value.y; w = value.z; z = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xyww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, y, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, y, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; z = value.y; y = value.z; w = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, w, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; z = value.y; w = value.z; y = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xzww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, z, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, y, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; w = value.y; y = value.z; z = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, z, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; w = value.y; z = value.z; y = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 xwww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(x, w, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, z, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; x = value.y; z = value.z; w = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, w, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; x = value.y; w = value.z; z = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yxww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, x, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yywx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yywy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yywz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yyww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, y, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, x, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; z = value.y; x = value.z; w = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, w, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; z = value.y; w = value.z; x = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 yzww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, z, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, x, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; w = value.y; x = value.z; z = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, z, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; w = value.y; z = value.z; x = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 ywww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(y, w, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, y, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; x = value.y; y = value.z; w = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, w, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; x = value.y; w = value.z; y = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zxww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, x, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, x, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; y = value.y; x = value.z; w = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zywx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, w, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; y = value.y; w = value.z; x = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zywy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zywz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zyww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, y, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zzww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, z, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, x, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; w = value.y; x = value.z; y = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, y, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; w = value.y; y = value.z; x = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 zwww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(z, w, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, y, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; x = value.y; y = value.z; z = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, z, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; x = value.y; z = value.z; y = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wxww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, x, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, x, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; y = value.y; x = value.z; z = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, z, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; y = value.y; z = value.z; x = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wywx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wywy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wywz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wyww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, y, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, x, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; z = value.y; x = value.z; y = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, y, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; z = value.y; y = value.z; x = value.w; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wzww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, z, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x4 wwww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x4(w, w, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, y, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; y = value.y; z = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, y, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; y = value.y; w = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, z, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; z = value.y; y = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, z, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; z = value.y; w = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, w, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; w = value.y; y = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, w, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; w = value.y; z = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 xww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(x, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, x, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, x, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; x = value.y; z = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, x, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; x = value.y; w = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, y, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, z, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; z = value.y; x = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, z, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; z = value.y; w = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 ywx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, w, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; w = value.y; x = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 ywy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 ywz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, w, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; w = value.y; z = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 yww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(y, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, x, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; x = value.y; y = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, x, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, x, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; x = value.y; w = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, y, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; y = value.y; x = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, y, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, y, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; y = value.y; w = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, z, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, z, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, w, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; w = value.y; x = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, w, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; w = value.y; y = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 zww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(z, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wxx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wxy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, x, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; x = value.y; y = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wxz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, x, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; x = value.y; z = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wxw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, x, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wyx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, y, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; y = value.y; x = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wyy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wyz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, y, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; y = value.y; z = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wyw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, y, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wzx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, z, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; z = value.y; x = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wzy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, z, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; z = value.y; y = value.z; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wzz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wzw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, z, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wwx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, w, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wwy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, w, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 wwz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, w, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x3 www
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x3(w, w, w); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 xx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(x, x); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 xy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(x, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; y = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 xz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(x, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; z = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 xw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(x, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { x = value.x; w = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 yx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(y, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; x = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 yy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(y, y); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 yz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(y, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; z = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 yw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(y, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { y = value.x; w = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 zx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(z, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; x = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 zy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(z, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; y = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 zz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(z, z); }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 zw
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(z, w); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { z = value.x; w = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 wx
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(w, x); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; x = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 wy
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(w, y); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; y = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 wz
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(w, z); }
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            set { w = value.x; z = value.y; }
        }


        /// <summary>Swizzles the vector.</summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public F32x2 ww
        {
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            get { return new F32x2(w, w); }
        }



        /// <summary>Returns the float element at a specified index.</summary>
        unsafe public float this[int index]
        {
            get
            {
#if ENABLE_UNITY_COLLECTIONS_CHECKS
                if ((uint)index >= 4)
                    throw new System.ArgumentException("index must be between[0...3]");
#endif
                fixed (F32x4* array = &this) { return ((float*)array)[index]; }
            }
            set
            {
#if ENABLE_UNITY_COLLECTIONS_CHECKS
                if ((uint)index >= 4)
                    throw new System.ArgumentException("index must be between[0...3]");
#endif
                fixed (float* array = &x) { array[index] = value; }
            }
        }

        /// <summary>Returns true if the F32x4 is equal to a given F32x4, false otherwise.</summary>
        /// <param name="rhs">Right hand side argument to compare equality with.</param>
        /// <returns>The result of the equality comparison.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool Equals(F32x4 rhs) { return x == rhs.x && y == rhs.y && z == rhs.z && w == rhs.w; }

        /// <summary>Returns true if the F32x4 is equal to a given F32x4, false otherwise.</summary>
        /// <param name="o">Right hand side argument to compare equality with.</param>
        /// <returns>The result of the equality comparison.</returns>
        public override bool Equals(object o) { return o is F32x4 converted && Equals(converted); }


        /// <summary>Returns a hash code for the F32x4.</summary>
        /// <returns>The computed hash code.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public override int GetHashCode() { return (int)Maths.hash(this); }


        /// <summary>Returns a string representation of the F32x4.</summary>
        /// <returns>String representation of the value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public override string ToString()
        {
            return string.Format("F32x4({0}f, {1}f, {2}f, {3}f)", x, y, z, w);
        }

        /// <summary>Returns a string representation of the F32x4 using a specified format and culture-specific format information.</summary>
        /// <param name="format">Format string to use during string formatting.</param>
        /// <param name="formatProvider">Format provider to use during string formatting.</param>
        /// <returns>String representation of the value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public string ToString(string format, IFormatProvider formatProvider)
        {
            return string.Format("F32x4({0}f, {1}f, {2}f, {3}f)", x.ToString(format, formatProvider), y.ToString(format, formatProvider), z.ToString(format, formatProvider), w.ToString(format, formatProvider));
        }

        internal sealed class DebuggerProxy
        {
            public float x;
            public float y;
            public float z;
            public float w;
            public DebuggerProxy(F32x4 v)
            {
                x = v.x;
                y = v.y;
                z = v.z;
                w = v.w;
            }
        }

    }

    public static partial class Maths
    {
        /*
        /// <summary>Returns a F32x4 vector constructed from four float values.</summary>
        /// <param name="x">The constructed vector's x component will be set to this value.</param>
        /// <param name="y">The constructed vector's y component will be set to this value.</param>
        /// <param name="z">The constructed vector's z component will be set to this value.</param>
        /// <param name="w">The constructed vector's w component will be set to this value.</param>
        /// <returns>F32x4 constructed from arguments.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(float x, float y, float z, float w) { return new F32x4(x, y, z, w); }

        /// <summary>Returns a F32x4 vector constructed from two float values and a F32x2 vector.</summary>
        /// <param name="x">The constructed vector's x component will be set to this value.</param>
        /// <param name="y">The constructed vector's y component will be set to this value.</param>
        /// <param name="zw">The constructed vector's zw components will be set to this value.</param>
        /// <returns>F32x4 constructed from arguments.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(float x, float y, F32x2 zw) { return new F32x4(x, y, zw); }

        /// <summary>Returns a F32x4 vector constructed from a float value, a F32x2 vector and a float value.</summary>
        /// <param name="x">The constructed vector's x component will be set to this value.</param>
        /// <param name="yz">The constructed vector's yz components will be set to this value.</param>
        /// <param name="w">The constructed vector's w component will be set to this value.</param>
        /// <returns>F32x4 constructed from arguments.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(float x, F32x2 yz, float w) { return new F32x4(x, yz, w); }

        /// <summary>Returns a F32x4 vector constructed from a float value and a F32x3 vector.</summary>
        /// <param name="x">The constructed vector's x component will be set to this value.</param>
        /// <param name="yzw">The constructed vector's yzw components will be set to this value.</param>
        /// <returns>F32x4 constructed from arguments.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(float x, F32x3 yzw) { return new F32x4(x, yzw); }

        /// <summary>Returns a F32x4 vector constructed from a F32x2 vector and two float values.</summary>
        /// <param name="xy">The constructed vector's xy components will be set to this value.</param>
        /// <param name="z">The constructed vector's z component will be set to this value.</param>
        /// <param name="w">The constructed vector's w component will be set to this value.</param>
        /// <returns>F32x4 constructed from arguments.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(F32x2 xy, float z, float w) { return new F32x4(xy, z, w); }

        /// <summary>Returns a F32x4 vector constructed from two F32x2 vectors.</summary>
        /// <param name="xy">The constructed vector's xy components will be set to this value.</param>
        /// <param name="zw">The constructed vector's zw components will be set to this value.</param>
        /// <returns>F32x4 constructed from arguments.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(F32x2 xy, F32x2 zw) { return new F32x4(xy, zw); }

        /// <summary>Returns a F32x4 vector constructed from a F32x3 vector and a float value.</summary>
        /// <param name="xyz">The constructed vector's xyz components will be set to this value.</param>
        /// <param name="w">The constructed vector's w component will be set to this value.</param>
        /// <returns>F32x4 constructed from arguments.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(F32x3 xyz, float w) { return new F32x4(xyz, w); }

        /// <summary>Returns a F32x4 vector constructed from a F32x4 vector.</summary>
        /// <param name="xyzw">The constructed vector's xyzw components will be set to this value.</param>
        /// <returns>F32x4 constructed from arguments.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(F32x4 xyzw) { return new F32x4(xyzw); }

        /// <summary>Returns a F32x4 vector constructed from a single float value by assigning it to every component.</summary>
        /// <param name="v">float to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(float v) { return new F32x4(v); }

        /// <summary>Returns a F32x4 vector constructed from a single bool value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">bool to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(bool v) { return new F32x4(v); }

        /// <summary>Return a F32x4 vector constructed from a Boolx4 vector by componentwise conversion.</summary>
        /// <param name="v">Boolx4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(Boolx4 v) { return new F32x4(v); }

        /// <summary>Returns a F32x4 vector constructed from a single int value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">int to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(int v) { return new F32x4(v); }

        /// <summary>Return a F32x4 vector constructed from a I32x4 vector by componentwise conversion.</summary>
        /// <param name="v">I32x4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(I32x4 v) { return new F32x4(v); }

        /// <summary>Returns a F32x4 vector constructed from a single uint value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">uint to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(uint v) { return new F32x4(v); }

        /// <summary>Return a F32x4 vector constructed from a U32x4 vector by componentwise conversion.</summary>
        /// <param name="v">U32x4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(U32x4 v) { return new F32x4(v); }

        /// <summary>Returns a F32x4 vector constructed from a single F16 value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">F16 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(F16 v) { return new F32x4(v); }

        /// <summary>Return a F32x4 vector constructed from a F16x4 vector by componentwise conversion.</summary>
        /// <param name="v">F16x4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(F16x4 v) { return new F32x4(v); }

        /// <summary>Returns a F32x4 vector constructed from a single double value by converting it to float and assigning it to every component.</summary>
        /// <param name="v">double to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(double v) { return new F32x4(v); }

        /// <summary>Return a F32x4 vector constructed from a F64x4 vector by componentwise conversion.</summary>
        /// <param name="v">F64x4 to convert to F32x4</param>
        /// <returns>Converted value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 new F32x4(F64x4 v) { return new F32x4(v); }
        */

        /// <summary>Returns a uint hash code of a F32x4 vector.</summary>
        /// <param name="v">Vector value to hash.</param>
        /// <returns>uint hash of the argument.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static uint hash(F32x4 v)
        {
            return csum(AsU32(v) * new U32x4(0xE69626FFu, 0xBD010EEBu, 0x9CEDE1D1u, 0x43BE0B51u)) + 0xAF836EE1u;
        }

        /// <summary>
        /// Returns a U32x4 vector hash code of a F32x4 vector.
        /// When multiple elements are to be hashes together, it can more efficient to calculate and combine wide hash
        /// that are only reduced to a narrow uint hash at the very end instead of at every step.
        /// </summary>
        /// <param name="v">Vector value to hash.</param>
        /// <returns>U32x4 hash of the argument.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static U32x4 hashwide(F32x4 v)
        {
            return (AsU32(v) * new U32x4(0xB130C137u, 0x54834775u, 0x7C022221u, 0xA2D00EDFu)) + 0xA8977779u;
        }

        /// <summary>Returns the result of specified shuffling of the components from two F32x4 vectors into a float value.</summary>
        /// <param name="left">F32x4 to use as the left argument of the shuffle operation.</param>
        /// <param name="right">F32x4 to use as the right argument of the shuffle operation.</param>
        /// <param name="x">The ShuffleComponent to use when setting the resulting float.</param>
        /// <returns>float result of the shuffle operation.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static float shuffle(F32x4 left, F32x4 right, ShuffleComponent x)
        {
            return select_shuffle_component(left, right, x);
        }

        /// <summary>Returns the result of specified shuffling of the components from two F32x4 vectors into a F32x2 vector.</summary>
        /// <param name="left">F32x4 to use as the left argument of the shuffle operation.</param>
        /// <param name="right">F32x4 to use as the right argument of the shuffle operation.</param>
        /// <param name="x">The ShuffleComponent to use when setting the resulting F32x2 x component.</param>
        /// <param name="y">The ShuffleComponent to use when setting the resulting F32x2 y component.</param>
        /// <returns>F32x2 result of the shuffle operation.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x2 shuffle(F32x4 left, F32x4 right, ShuffleComponent x, ShuffleComponent y)
        {
            return new F32x2(
                select_shuffle_component(left, right, x),
                select_shuffle_component(left, right, y));
        }

        /// <summary>Returns the result of specified shuffling of the components from two F32x4 vectors into a F32x3 vector.</summary>
        /// <param name="left">F32x4 to use as the left argument of the shuffle operation.</param>
        /// <param name="right">F32x4 to use as the right argument of the shuffle operation.</param>
        /// <param name="x">The ShuffleComponent to use when setting the resulting F32x3 x component.</param>
        /// <param name="y">The ShuffleComponent to use when setting the resulting F32x3 y component.</param>
        /// <param name="z">The ShuffleComponent to use when setting the resulting F32x3 z component.</param>
        /// <returns>F32x3 result of the shuffle operation.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x3 shuffle(F32x4 left, F32x4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
        {
            return new F32x3(
                select_shuffle_component(left, right, x),
                select_shuffle_component(left, right, y),
                select_shuffle_component(left, right, z));
        }

        /// <summary>Returns the result of specified shuffling of the components from two F32x4 vectors into a F32x4 vector.</summary>
        /// <param name="left">F32x4 to use as the left argument of the shuffle operation.</param>
        /// <param name="right">F32x4 to use as the right argument of the shuffle operation.</param>
        /// <param name="x">The ShuffleComponent to use when setting the resulting F32x4 x component.</param>
        /// <param name="y">The ShuffleComponent to use when setting the resulting F32x4 y component.</param>
        /// <param name="z">The ShuffleComponent to use when setting the resulting F32x4 z component.</param>
        /// <param name="w">The ShuffleComponent to use when setting the resulting F32x4 w component.</param>
        /// <returns>F32x4 result of the shuffle operation.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static F32x4 shuffle(F32x4 left, F32x4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
        {
            return new F32x4(
                select_shuffle_component(left, right, x),
                select_shuffle_component(left, right, y),
                select_shuffle_component(left, right, z),
                select_shuffle_component(left, right, w));
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        internal static float select_shuffle_component(F32x4 a, F32x4 b, ShuffleComponent component)
        {
            switch(component)
            {
                case ShuffleComponent.LeftX:
                    return a.x;
                case ShuffleComponent.LeftY:
                    return a.y;
                case ShuffleComponent.LeftZ:
                    return a.z;
                case ShuffleComponent.LeftW:
                    return a.w;
                case ShuffleComponent.RightX:
                    return b.x;
                case ShuffleComponent.RightY:
                    return b.y;
                case ShuffleComponent.RightZ:
                    return b.z;
                case ShuffleComponent.RightW:
                    return b.w;
                default:
                    throw new System.ArgumentException("Invalid shuffle component: " + component);
            }
        }

    }
}
